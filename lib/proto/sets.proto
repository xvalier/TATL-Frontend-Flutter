syntax = "proto3";
package sets;

service ErrorResolution {
	//Authentication Services
	rpc createLogin(NewUser) returns (Receipt) {}
	rpc sendLogin(User) returns (Receipt) {}
	//Search and Traversal Services
	rpc getSymptomList(UserQuery) returns (ServerList) {}
	rpc startSession(UserSelection) returns (ServerFeedback) {}
	rpc getNextQuestion(UserFeedback) returns (ServerFeedback) {}
}

//New User
message NewUser {
	string email = 1;
	string pass  = 2;
	string organization = 3;
	string role  = 4;
	string devID = 5;
}

//Existing User
message User {
	string email = 1;
	string pass  = 2;
	string devID = 3;
}

//Login Receipt (either an error message or route to next page)
message Receipt {
	string message   = 1;
	bool successFlag = 2;
	string token     = 3;
}

//User askes a question on an issue to server
message UserQuery {
	string input = 1;
	string token = 2;
}

message Symptom{
	string input = 1;
}

//Server response with a list of symptoms to user question
message ServerList{
	repeated Symptom symptoms = 1;
}

//User sends response of which symptoms are confirmed
message UserSelection{
	string input = 1;
	string token = 2;
}

//Server sends a single symptom/resolution question to User
//Server can also finish session via doneFlag
message ServerFeedback {
	string input    = 1;
	bool doneFlag   = 2;
	bool solvedFlag = 3;
}

//User responses with yes or no responses to server question
message UserFeedback {
	bool input   = 1;
	string token = 2;
}
